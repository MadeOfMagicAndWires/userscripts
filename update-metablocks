#!/bin/sh

PROGRAM='update-metablocks';
VERSION='1.2.3';

LICENCE='
The MIT License (MIT)

Copyright (c) 2014 Joost Bremmer

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
'

HELPMSG="
###################################################################
##                                                               ##
## update-metablocks ${VERSION}                                       ##
##                                                               ##
## writes userscript metablock data to *.meta.js files.          ##
##                                                               ##
## Takes as arguments:                                           ##
##        -w:  Write to file(s), without this it will do a       ##
##   --write: dryrun and outputs to stdout                       ##
##                                                               ##
##    --help: Prints a help message.                             ##
##                                                               ##
##        -o: Optional output file, default is inputfile.meta.js ##
##  --output:                                                    ##
##                                                               ##
## --licence: Prints MIT Licence                                 ##
##                                                               ##
## --version: Print the current version                          ##
##                                                               ##
##      file: Input userscript file.                             ##
##                                                               ##
###################################################################
"

DRYRUN=true;
INPUTFILE="";
OUTPUTFILE="";
OUTPUTFILEBOOL=false;
DATE=$(date --iso-8601=date);

writeoutput () {
    if $DRYRUN; then
        if grep -q -E "\@date" "${INPUTFILE}"; then
            sed -r "s/[0-9]{2,4}\\-[0-9]{2,4}\\-[0-9]{2,4}/$DATE/" "$INPUTFILE" | \
                grep -E -B 100 "==/UserScript==" ;
                echo "";
        else
             sed -r "/\@version/a // @date           $DATE\ " "${INPUTFILE}" |\
                grep  -E -B 100 "==/UserScript==" ;
        fi

    else
        echo "Writing metablock from \"${INPUTFILE}\" into \"${OUTPUTFILE}\"";

        if grep -E "\@date" "${INPUTFILE}"; then
            sed -i -r "s/[0-9]{2,4}\\-[0-9]{2,4}\\-[0-9]{2,4}/$DATE/" "${INPUTFILE}";
        else
            sed -i -r "/\@version/a // @date           $DATE \ " "${INPUTFILE}";
    fi

    grep -e -B 100 "==/UserScript=="  "${INPUTFILE}" > "${OUTPUTFILE}" 2>/dev/null;
    fi

}


if test $# -eq 0; then
    echo "No arguments specified!";
    echo "${HELPMSG}";
fi


while test $# -gt 0; do

    case $1 in
        -w|--write)
            DRYRUN=false;
            shift 1;
            ;;

        --help)
            echo "$HELPMSG";
            exit 0;
            ;;

        -o|--output)
            shift 1;
            if test $# -gt 0; then
                OUTPUTFILE=$1;
                OUTPUTFILEBOOL=true;
            else
                echo "no outputfile specified";
                echo "$HELPMSG";
                exit 1;
            fi
            shift 1;
            ;;

        --licence)
            echo "$LICENCE";
            exit 0;
            ;;

        --version)
            echo "$VERSION";
            exit 0;
            ;;
        *)
            if test $# -gt 0; then
                INPUTFILE="$1"

                if [ "$OUTPUTFILEBOOL" = "false"  ]; then
                    OUTPUTFILE=$(sed 's/user/meta/g' "$INPUTFILE" );
                fi
                writeoutput;

            else
                echo "No files given!";
                echo "$HELPMSG"
                exit 1;
            fi
            shift 1;
            ;;
    esac

done

#vim: set ts=2 sw=2
